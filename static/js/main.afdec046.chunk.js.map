{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/AccountForm.js","components/game/Box.js","components/game/Board.js","components/game/RamdomNumber.js","components/game/Timer.js","components/BlogRoute/Poster.js","routes/Blog.js","components/TweetFactory.js","components/BlogRoute/Upload.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Error","styled","div","ErrorText","Form","form","IDPW","input","Login","SLink","Link","Text","span","AuthForm","useState","email","setEmail","password","setPassword","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","signInWithEmailAndPassword","message","type","placeholder","required","to","Body","Container","Google","button","GitHub","Auth","history","useHistory","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","push","onClick","body","Select","p","Text2","Home","width","height","src","alt","href","Header","header","Navigation","userObj","Profile","refreshUser","isLoggedIn","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","passwordCheck","setPasswordCheck","passwordError","setPasswordError","createUserWithEmailAndPassword","alert","onChangePasswordChk","e","minLength","Box","num","handleClick","Board","numbers","map","index","Minute","Back","Timer","timeElapsed","setTimeElapsed","record","useRef","current","useEffect","timer","setInterval","clearInterval","Math","floor","array","i","RamdomNumber","setNumbers","gameFlag","setGameFlag","setCurrent","endGame","indexOf","slice","Button","variant","size","length","j","random","shuffleArray","Poster","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","update","ButtonToolbar","Blog","tweets","setTweets","collection","orderBy","onSnapshot","snapshot","TweetArray","docs","data","console","log","tweet","creatorId","uid","Chat","File","TweetFactory","setTweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createAt","Date","now","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Upload","RouterHandle","exact","path","component","AccountForm","GlobalStyles","createGlobalStyle","reset","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afdec046.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Error = styled.div`\r\n  height: 25px;\r\n  width: 390px;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  line-height: 25px;\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  height: 25px;\r\n  width: 390px;\r\n  border-radius: 3px;\r\n  background: red;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 200px;\r\n`;\r\n\r\nconst IDPW = styled.input`\r\n  font-size: 17px;\r\n  width: 220px;\r\n  height: 36px;\r\n  color: black;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n  border-bottom: 2px solid #95a5a6;\r\n  &:focus::-webkit-input-placeholder {\r\n    color:transparent;\r\n  }\r\n`;\r\n\r\nconst Login = styled.input`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  border: none;\r\n  background: white;\r\n  margin:15px 0 15px 0;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  background-color: white;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n  &:focus {\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  vertical-align: middle;\r\n  line-height: 40px;\r\n`;\r\n\r\nconst AuthForm = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {target: { name, value }} = event;\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(email, password);\r\n    } catch(error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Error>\r\n        {error && <ErrorText>\r\n          ID 혹은 비밀번호를 잘못 입력하셨거나 등록되지 않은 ID 입니다.\r\n        </ErrorText>}\r\n      </Error>\r\n      <Form onSubmit={onSubmit}>\r\n        <IDPW \r\n          name=\"email\" \r\n          type=\"text\" \r\n          placeholder=\"이메일\" \r\n          required value={email} \r\n          onChange={onChange}\r\n        />\r\n        <IDPW \r\n          name=\"password\" \r\n          type=\"password\" \r\n          placeholder=\"비밀번호\" \r\n          required value={password} \r\n          onChange={onChange}\r\n        />\r\n        <Login type=\"submit\" value=\"로그인\"></Login>\r\n        <SLink to=\"/Account\">\r\n          <Text>계정생성</Text>\r\n        </SLink>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Body = styled.div`\r\n  font-size: 13px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 420px;\r\n  height: 420px;\r\n  border-radius: 18%;\r\n  background-color: gold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Google = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  border: 0;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  background-image: url(\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  margin: 20px;\r\n`;\r\n\r\nconst GitHub = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  border: 0;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-image: url(\"https://upload.wikimedia.org/wikipedia/commons/4/4a/GitHub_Mark.png\");\r\n  margin: 20px;\r\n`;\r\n\r\nconst Auth = () => {\r\n  const history = useHistory();\r\n  const onSocialClick = async (event) => {\r\n    const {target : {name} } = event;\r\n    let provider;\r\n    if(name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Body>\r\n      <Container>\r\n        <AuthForm />\r\n        <div>\r\n            <Google onClick={onSocialClick} name=\"google\"></Google>\r\n            <GitHub onClick={onSocialClick} name=\"github\"></GitHub>\r\n        </div>\r\n      </Container>\r\n    </Body>\r\n  );\r\n}\r\n\r\n\r\nexport default Auth;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Body = styled.body`\r\n  width: 100%;\r\n  height: calc(100vh - 120px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  `;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-rows: repeat(2,1fr);\r\n  grid-template-columns: repeat(2,1fr);\r\n`;\r\n\r\nconst Select = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Text2 = styled.p`\r\n  margin-top: 100px;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Body>\r\n      <Container>\r\n        <Select>\r\n          <Link to=\"/Game\">\r\n            <img width=\"400px\" height=\"400px\" src={process.env.PUBLIC_URL + '/images/img1.png'} alt=\"\"/>\r\n          </Link>\r\n          <Text>Mouse Game</Text>\r\n        </Select>\r\n        <Select>\r\n          <a href=\"https://jiho3894.github.io/cloneNetflix/\">\r\n            <img width=\"400px\" height=\"400px\" src={process.env.PUBLIC_URL + '/images/img2.png'} alt=\"\"/>\r\n          </a>\r\n          <Text>Netflix</Text>\r\n        </Select>\r\n        <Select>\r\n          <a href=\"https://jiho3894.github.io/Web-Synthesizer/piano/\">\r\n            <img width=\"400px\" height=\"400px\" src={process.env.PUBLIC_URL + '/images/img3.png'} alt=\"\"/>\r\n          </a>\r\n          <Text>Web-Synthesizer</Text>\r\n        </Select>\r\n        <Select>\r\n          <Link to=\"/StudyBlog\">\r\n            <img width=\"400px\" height=\"300px\" src={process.env.PUBLIC_URL + '/images/img4.png'} alt=\"\"/>\r\n          </Link>\r\n          <Text2>Study Blog</Text2>\r\n        </Select>\r\n      </Container>\r\n    </Body>\r\n  );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return(\r\n    <Header>\r\n      <Link to=\"/\">\r\n        <img width=\"50px\" height=\"50px\" src={process.env.PUBLIC_URL + '/images/home.gif'} alt=\"\"/>\r\n      </Link>\r\n      <Link to=\"/profile\">\r\n        <img width=\"50px\" height=\"50px\" src={process.env.PUBLIC_URL + '/images/profile.png'} alt=\"\"/>\r\n      </Link>\r\n    </Header>\r\n)};\r\n\r\nexport default Navigation;","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ refreshUser, userObj, isLoggedIn }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const history = useHistory();\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const { target : {value} } = event;\r\n    setNewDisplayName(value);\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName){\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      { !isLoggedIn ? (\r\n      <>\r\n        <form onSubmit={onSubmit} >\r\n          <input \r\n          onChange={onChange} value={newDisplayName} type=\"text\" placeholder=\"Display name\" />\r\n          <input  type=\"submit\" value=\"프로필 수정\" />\r\n        </form>\r\n        <button onClick={onLogOutClick}>로그아웃</button>\r\n        <p>{userObj.displayName}</p>\r\n        <Link to=\"/\">돌아가기</Link>\r\n      </>\r\n      ) : null\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Error = styled.div`\r\n  height: 25px;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  line-height: 25px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  font-size: 15px;\r\n  color: white;\r\n  font-weight: 600;\r\n  height: 25px;\r\n  width: 240px;\r\n  border-radius: 3px;\r\n  background: red;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  font-size: 13px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 420px;\r\n  height: 420px;\r\n  border-radius: 18%;\r\n  background-color: gold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 260px;\r\n`;\r\n\r\nconst IDPW = styled.input`\r\n  font-size: 17px;\r\n  width: 220px;\r\n  height: 36px;\r\n  color: black;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n  border-bottom: 2px solid #95a5a6;\r\n  &:focus::-webkit-input-placeholder {\r\n    color:transparent;\r\n  }\r\n`;\r\n\r\nconst Login = styled.button`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  border: none;\r\n  background: white;\r\n  margin:15px 0 15px 0;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  background-color: white;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  vertical-align: middle;\r\n  line-height: 40px;\r\n`;\r\n\r\nconst AuthForm = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck,setPasswordCheck] = useState('');\r\n  const [passwordError,setPasswordError] = useState(false);\r\n\r\n  const onChange = (event) => {\r\n    const {target: { name, value }} = event;\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  }\r\n  const history = useHistory();\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await authService.createUserWithEmailAndPassword(email, password);\r\n      history.push(\"/\");\r\n    } catch(error) {\r\n      if(password !== passwordCheck) {\r\n        return alert('비밀번호와 비밀번호 확인이 일치해야 합니다.')\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangePasswordChk = async (e) => {\r\n    setPasswordError(e.target.value !== password);\r\n    setPasswordCheck(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Body>\r\n      <Container>\r\n        <Form onSubmit={onSubmit}>\r\n          <IDPW \r\n            name=\"email\" \r\n            type=\"text\" \r\n            placeholder=\"이메일\" \r\n            required value={email} \r\n            onChange={onChange}\r\n          />\r\n          <IDPW \r\n            name=\"password\" \r\n            type=\"password\" \r\n            placeholder=\"비밀번호\" \r\n            required value={password} \r\n            onChange={onChange}\r\n            minLength=\"6\"\r\n          />\r\n          <IDPW \r\n            name=\"passwordCheck\" \r\n            type=\"password\" \r\n            placeholder=\"비밀번호 확인\" \r\n            value={passwordCheck}\r\n            required onChange={onChangePasswordChk}\r\n            minLength=\"6\"\r\n          />\r\n          <Error>\r\n            {passwordError && <ErrorText>\r\n              비밀번호가 일치하지 않습니다.\r\n            </ErrorText>}\r\n          </Error>\r\n          <Login type=\"submit\">계정생성</Login>\r\n          <SLink to=\"/\">\r\n            <Text>돌아가기</Text>\r\n          </SLink>\r\n        </Form>\r\n      </Container>\r\n    </Body>\r\n  )\r\n}\r\nexport default AuthForm;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Box = ({num, handleClick}) =>{\r\n  return <Container onClick={() => handleClick(num)}>{num !==0 ? num : null}</Container>;\r\n}\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid rgba(0,0,0,0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  &:hover {\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.8) inset, 0px 0px 5px rgba(200,200,200,0.5);\r\n  }\r\n`;\r\n\r\nexport default Box;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Box from './Box';\r\n\r\nconst Container = styled.div`\r\n  width: 700px;\r\n  height: 700px;\r\n  border: 1px solid blue;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: repeat(5, 1fr);\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Board = ({numbers, handleClick}) => {\r\n  return(\r\n    <Container>\r\n      {numbers.map((num, index) => (\r\n        <Box handleClick={handleClick} num={num} key={index}></Box>\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from './Board';\r\nimport { useState } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n  height: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nlet array = [];\r\nfor(let i = 1; i<=25; i++) {\r\n  array.push(i);\r\n}\r\n\r\nconst RamdomNumber = () => {\r\n  const [numbers, setNumbers] = useState(array);\r\n  const [gameFlag, setGameFlag] = useState(false);\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const handleClick = (num) => {\r\n  if(num === current) {\r\n    if(num === 50) {\r\n      alert(\"축하합니다\");\r\n      endGame();\r\n    }\r\n    const index = numbers.indexOf(num);\r\n    setNumbers(numbers => [\r\n      ...numbers.slice(0, index),\r\n      num < 26 ? num + 25 : 0,\r\n      ...numbers.slice(index + 1)\r\n    ]);\r\n    setCurrent(current => current + 1);\r\n    }\r\n  }\r\n\r\n  const shuffleArray = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const gameStart = () => {\r\n    setNumbers(shuffleArray(array));\r\n    setCurrent(1);\r\n    setGameFlag(true);\r\n  }\r\n\r\n  const endGame = () => {\r\n    setGameFlag(false);\r\n  }\r\n\r\n  return (\r\n    <Body>\r\n      <h1>랜덤숫자 맞추기 게임</h1>\r\n      \r\n      <Container>\r\n        {gameFlag ? (\r\n          <>\r\n            <Board numbers={numbers} handleClick={handleClick}/>\r\n            <Timer/>\r\n            <Button variant=\"primary\" size=\"lg\" onClick={endGame}>그만하기</Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Link to=\"/Game\">돌아가기</Link>\r\n            <Button variant=\"primary\" size=\"lg\" onClick={gameStart}>Start</Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Body>\r\n  )\r\n}\r\n\r\nexport default RamdomNumber;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Timer() {\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const record = useRef();\r\n  record.current = timeElapsed;\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeElapsed(timeElapsed => timeElapsed + 30);\r\n    }, 30);\r\n    return () => {\r\n      alert(`당신의 기록은 ${record.current / 1000}초 입니다.`);\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Minute>{Math.floor(timeElapsed / 1000)}:</Minute>\r\n      <Back>{(timeElapsed % 1000) / 10}</Back>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 15px;\r\n  width: 100px;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 35px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Minute = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nconst Back = styled.div`\r\n  width: 1em;\r\n`;\r\n\r\nexport default Timer;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport styled from \"styled-components\";\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Poster = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`tweet/${tweetObj.id}`).delete();\r\n      if(tweetObj.attachmentUrl !== \"\"){\r\n        await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweet/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {target: { value } } = event;\r\n    setNewTweet(value);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n          <Body>\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"수정할 텍스트\"\r\n                value={newTweet}\r\n                required\r\n                onChange={onChange}\r\n              />\r\n              <input type=\"submit\" value=\"⭕\" />\r\n            </form>\r\n            <button onClick={toggleEditing}>취소</button>\r\n          </Body>\r\n          )}\r\n        </>\r\n      ) : (\r\n          <Body>\r\n            <h4>{tweetObj.text}</h4>\r\n            {tweetObj.attachmentUrl && <img alt=\"\" src={tweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/> }\r\n            {isOwner && (\r\n              <>\r\n                <ButtonToolbar>\r\n                  <Button onClick={onDeleteClick} variant=\"danger\" size=\"sm\">삭제하기</Button>\r\n                  <Button onClick={toggleEditing} variant=\"info\" size=\"sm\">수정하기</Button>\r\n                </ButtonToolbar>\r\n              </>\r\n            )}\r\n          </Body>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Poster;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Poster from 'components/BlogRoute/Poster';\r\n\r\nconst Body = styled.div`\r\n  position: absolute;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(auto-fit, 100px);\r\n`;\r\n\r\nconst Blog = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"tweet\").orderBy(\"createAt\",\"desc\").onSnapshot((snapshot) => {\r\n    const TweetArray = snapshot.docs.map((doc) => {\r\n      return { id: doc.id, ...doc.data() };\r\n    });\r\n      setTweets(TweetArray);\r\n    });\r\n  }, []);\r\n  console.log(tweets);\r\n  return(\r\n    <Body>\r\n      <Link to=\"/StudyBlog/Upload\">\r\n        올리기\r\n      </Link>\r\n      <>\r\n        <Box>\r\n          {tweets.map((tweet) => (\r\n            <>\r\n              <Poster\r\n                key={tweet.id} \r\n                tweetObj={tweet} \r\n                isOwner={tweet.creatorId === userObj.uid}/>\r\n              <Link to={`/StudyBlog/Detail/${tweet.id}`}>자세히</Link>\r\n            </>\r\n          ))}\r\n        </Box>\r\n      </>\r\n    </Body>\r\n  );\r\n}\r\n\r\nexport default Blog;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport {v4 as uuidv4 } from 'uuid';\r\n\r\nconst Chat = styled.input`\r\n  width: 200px;\r\n`;\r\n\r\nconst File = styled.input`\r\n  width: 100px;\r\n`;\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const history = useHistory();\r\n  const onSubmit = async (event) => {\r\n    history.push(\"/studyBlog\");\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\") {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n  const tweetObj = {\r\n    text: tweet,\r\n    createAt: Date.now(),\r\n    creatorId: userObj.uid,\r\n    attachmentUrl\r\n  }\r\n  await dbService.collection(\"tweet\").add(tweetObj);\r\n  setTweet(\"\");\r\n  setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {target: { value } } = event;\r\n    setTweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {target: {files}} = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    if(theFile) {\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {currentTarget : {result}} = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n    }\r\n  }\r\n\r\n  const onClearPhotoClick = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Chat\r\n        value={tweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"채팅 입력\"\r\n        maxLength={100}\r\n        required\r\n      />\r\n      <File type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n      <input type=\"submit\" value=\"올리기\" />\r\n      {attachment && (\r\n        <div>\r\n          <img alt=\"\" src={attachment} width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearPhotoClick}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  )\r\n}\r\nexport default TweetFactory;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Body = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst Upload = ({ userObj }) => {\r\n  return(\r\n    <Body>\r\n      <TweetFactory userObj={userObj}/>\r\n    </Body>\r\n  );\r\n}\r\n\r\nexport default Upload;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from 'routes/Profile';\r\nimport AccountForm from './AccountForm';\r\nimport RamdomNumber from './game/RamdomNumber';\r\nimport Blog from 'routes/Blog';\r\nimport Upload from './BlogRoute/Upload';\r\n\r\nconst RouterHandle = ({ refreshUser, userObj, isLoggedIn }) => {\r\n  return (\r\n    <Router>\r\n      <Navigation userObj={userObj}/>\r\n      <Switch>\r\n        <>\r\n          <Route exact path=\"/\" component={Home}>\r\n            <Home userObj={userObj}/>\r\n          </Route>\r\n          <Route exact path=\"/Game\">\r\n            <RamdomNumber></RamdomNumber>\r\n          </Route>\r\n          <Route exact path=\"/StudyBlog\">\r\n            <Blog userObj={userObj}/>\r\n          </Route>\r\n          <Route exact path=\"/StudyBlog/Upload\">\r\n            <Upload userObj={userObj}/>\r\n          </Route>\r\n          {isLoggedIn ? \r\n          (\r\n            <Route exact path=\"/profile\" component={Profile}>\r\n              <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n            </Route>\r\n          ) : \r\n          (\r\n            <Route exact path=\"/profile\" component={Auth}>\r\n              <Auth/>\r\n            </Route>\r\n          )\r\n        }\r\n          <Route exact path=\"/Account\" component={AccountForm}>\r\n            <AccountForm/>\r\n          </Route>\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default RouterHandle;","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n\r\n    body{\r\n        width: 100%;\r\n        height: 100vh;\r\n        font-size: 20px;\r\n        background-color: white;\r\n        font-family: 'Noto Sans KR', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"../components/Router\";\nimport { authService } from \"fbase\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport styled from \"styled-components\";\n\nconst Body = styled.body`\n  width: 100%;\n  height: 100vh;\n  padding: 0;\n  margin: 0;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          email: user.email,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      email: user.email,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  \n  return (\n    <Body>\n      <GlobalStyles />\n      {init ? (\n        <>\n          <AppRouter\n            refreshUser={refreshUser}\n            isLoggedIn={Boolean(userObj)}\n            userObj={userObj}\n          />\n        </>\n      ) : (\n        \"로딩중\"\n      )}\n    </Body>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}