{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/AccountForm.js","components/game/Box.js","components/game/Board.js","components/game/RamdomNumber.js","components/game/Timer.js","routes/Game.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Error","styled","div","ErrorText","Form","form","IDPW","input","Login","SLink","Link","Text","span","AuthForm","useState","email","setEmail","password","setPassword","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","signInWithEmailAndPassword","message","type","placeholder","required","to","Body","Container","Google","button","GitHub","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","onClick","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","update","alt","src","width","height","ButtonToolbar","Button","variant","size","Chat","File","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","body","Select","Under","Chatting","Box","Home","tweets","setTweets","initialState","state","setState","toggle","useCallback","useToggle","isOn","toggleIsOn","useEffect","orderBy","onSnapshot","snapshot","TweetArray","docs","map","data","href","nav","UL","ul","LI","li","Container2","p","Navigation","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","passwordCheck","setPasswordCheck","passwordError","setPasswordError","createUserWithEmailAndPassword","alert","onChangePasswordChk","e","minLength","num","handleClick","Board","numbers","index","Front","Back","Timer","timeElapsed","setTimeElapsed","record","useRef","current","timer","setInterval","clearInterval","Math","floor","array","i","RamdomNumber","setNumbers","gameFlag","setGameFlag","setCurrent","endGame","indexOf","slice","length","j","random","shuffleArray","App","RouterHandle","isLoggedIn","exact","path","component","Game","AccountForm","GlobalStyles","createGlobalStyle","reset","init","setInit","setUserObj","onAuthStateChanged","user","console","log","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a321ae4.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Error = styled.div`\r\n  height: 25px;\r\n  width: 390px;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  line-height: 25px;\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  height: 25px;\r\n  width: 390px;\r\n  border-radius: 3px;\r\n  background: red;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 200px;\r\n`;\r\n\r\nconst IDPW = styled.input`\r\n  font-size: 17px;\r\n  width: 220px;\r\n  height: 36px;\r\n  color: black;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n  border-bottom: 2px solid #95a5a6;\r\n  &:focus::-webkit-input-placeholder {\r\n    color:transparent;\r\n  }\r\n`;\r\n\r\nconst Login = styled.input`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  border: none;\r\n  background: white;\r\n  margin:15px 0 15px 0;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  background-color: white;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n  &:focus {\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  vertical-align: middle;\r\n  line-height: 40px;\r\n`;\r\n\r\nconst AuthForm = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {target: { name, value }} = event;\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(email, password);\r\n    } catch(error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Error>\r\n        {error && <ErrorText>\r\n          ID 혹은 비밀번호를 잘못 입력하셨거나 등록되지 않은 ID 입니다.\r\n        </ErrorText>}\r\n      </Error>\r\n      <Form onSubmit={onSubmit}>\r\n        <IDPW \r\n          name=\"email\" \r\n          type=\"text\" \r\n          placeholder=\"이메일\" \r\n          required value={email} \r\n          onChange={onChange}\r\n        />\r\n        <IDPW \r\n          name=\"password\" \r\n          type=\"password\" \r\n          placeholder=\"비밀번호\" \r\n          required value={password} \r\n          onChange={onChange}\r\n        />\r\n        <Login type=\"submit\" value=\"로그인\"></Login>\r\n        <SLink to=\"/Account\">\r\n          <Text>계정생성</Text>\r\n        </SLink>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Body = styled.div`\r\n  font-size: 13px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 420px;\r\n  height: 420px;\r\n  border-radius: 18%;\r\n  background-color: gold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Google = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  border: 0;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  background-image: url(\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  margin: 20px;\r\n`;\r\n\r\nconst GitHub = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  border: 0;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-image: url(\"https://upload.wikimedia.org/wikipedia/commons/4/4a/GitHub_Mark.png\");\r\n  margin: 20px;\r\n`;\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {target : {name} } = event;\r\n    let provider;\r\n    if(name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  \r\n  return (\r\n    <Body>\r\n      <Container>\r\n        <AuthForm />\r\n        <div>\r\n            <Google onClick={onSocialClick} name=\"google\"></Google>\r\n            <GitHub onClick={onSocialClick} name=\"github\"></GitHub>\r\n        </div>\r\n      </Container>\r\n    </Body>\r\n  );\r\n}\r\n\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport styled from \"styled-components\";\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`tweet/${tweetObj.id}`).delete();\r\n      if(tweetObj.attachmentUrl !== \"\"){\r\n        await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweet/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {target: { value } } = event;\r\n    setNewTweet(value);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n          <Body>\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"수정할 텍스트\"\r\n                value={newTweet}\r\n                required\r\n                onChange={onChange}\r\n              />\r\n              <input type=\"submit\" value=\"⭕\" />\r\n            </form>\r\n            <button onClick={toggleEditing}>취소</button>\r\n          </Body>\r\n          )}\r\n        </>\r\n      ) : (\r\n          <Body>\r\n            <h4>{tweetObj.text}</h4>\r\n            {tweetObj.attachmentUrl && <img alt=\"\" src={tweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/> }\r\n            {isOwner && (\r\n              <>\r\n                <ButtonToolbar>\r\n                  <Button onClick={onDeleteClick} variant=\"danger\" size=\"sm\">삭제하기</Button>\r\n                  <Button onClick={toggleEditing} variant=\"info\" size=\"sm\">수정하기</Button>\r\n                </ButtonToolbar>\r\n              </>\r\n            )}\r\n          </Body>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {v4 as uuidv4 } from 'uuid';\r\n\r\nconst Chat = styled.input`\r\n  width: 200px;\r\n`;\r\n\r\nconst File = styled.input`\r\n  width: 100px;\r\n`;\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\") {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n  const tweetObj = {\r\n    text: tweet,\r\n    createAt: Date.now(),\r\n    creatorId: userObj.uid,\r\n    attachmentUrl\r\n  }\r\n  await dbService.collection(\"tweet\").add(tweetObj);\r\n  setTweet(\"\");\r\n  setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {target: { value } } = event;\r\n    setTweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {target: {files}} = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    if(theFile) {\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {currentTarget : {result}} = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n    }\r\n  }\r\n\r\n  const onClearPhotoClick = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Chat\r\n        value={tweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"채팅 입력\"\r\n        maxLength={100}\r\n        required\r\n      />\r\n      <File type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n      <input type=\"submit\" value=\"올리기\" />\r\n      {attachment && (\r\n        <div>\r\n          <img alt=\"\" src={attachment} width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearPhotoClick}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  )\r\n}\r\nexport default TweetFactory;","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Tweet from 'components/Tweet';\r\nimport TweetFactory from \"components/TweetFactory\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\n\r\nconst Body = styled.body`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  `;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-rows: repeat(2,1fr);\r\n  grid-template-columns: repeat(2,1fr);\r\n`;\r\n\r\nconst Select = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Under = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst Chatting = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  flex-direction: column-reverse;\r\n  align-items: center;\r\n  width: 400px;\r\n  height: 400px;\r\n  bottom: 50px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(auto-fit, 30px);\r\n`;\r\n\r\nconst useToggle = (initialState = false) => {\r\n  const [state, setState] = useState(initialState);\r\n  const toggle = useCallback(() => setState(state => !state), []);\r\n  return [state, toggle];\r\n}\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [isOn, toggleIsOn] = useToggle();\r\n  useEffect(() => {\r\n    dbService.collection(\"tweet\").orderBy(\"createAt\",\"desc\").onSnapshot((snapshot) => {\r\n    const TweetArray = snapshot.docs.map((doc) => {\r\n      return { id: doc.id, ...doc.data() };\r\n    });\r\n      setTweets(TweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Body>\r\n      <Link to=\"/\">돌아가기</Link>\r\n      <Container>\r\n        <Select>\r\n          <Link to=\"/Game\">\r\n            <img width=\"400px\" height=\"400px\" src={process.env.PUBLIC_URL + '/images/img1.png'} alt=\"\"/>\r\n          </Link>\r\n          <p>Mouse Game</p>\r\n        </Select>\r\n        <Select>\r\n          <a href=\"https://jiho3894.github.io/cloneNetflix/\">\r\n            <img width=\"400px\" height=\"400px\" src={process.env.PUBLIC_URL + '/images/img2.png'} alt=\"\"/>\r\n          </a>\r\n          <p>Netflix</p>\r\n        </Select>\r\n        <Select>\r\n          <a href=\"https://jiho3894.github.io/Web-Synthesizer/piano/\">\r\n            <img width=\"400px\" height=\"400px\" src={process.env.PUBLIC_URL + '/images/img3.png'} alt=\"\"/>\r\n          </a>\r\n          <p>Web-Synthesizer</p>\r\n        </Select>\r\n        <Select>\r\n          <img width=\"400px\" height=\"400px\" src={process.env.PUBLIC_URL + '/images/img4.png'} alt=\"\"/>\r\n          <p>Study Blog</p>\r\n        </Select>\r\n      </Container>\r\n      <Under>\r\n        <>\r\n          { isOn ? (\r\n            <Chatting>\r\n              <TweetFactory userObj={userObj}/>\r\n              <Box>\r\n                  {tweets.map((tweet) => (\r\n                    <Tweet \r\n                    key={tweet.id} \r\n                    tweetObj={tweet} \r\n                    isOwner={tweet.creatorId === userObj.uid}/>\r\n                  ))}\r\n              </Box>\r\n            </Chatting>\r\n            ) : null\r\n          }\r\n        </>\r\n        <ButtonToolbar>\r\n            <Button variant=\"primary\" onClick={toggleIsOn} size=\"sm\" >Chatting</Button>\r\n        </ButtonToolbar>\r\n      </Under>\r\n    </Body>\r\n  );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Body = styled.nav`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst UL = styled.ul`\r\n  list-style: none;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst LI = styled.li`\r\n  float: left;\r\n  width: 400px;\r\n  height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 400px;\r\n  height: 250px;\r\n  background-image: url(\"https://www.pngkey.com/png/full/110-1103031_talking-png-download-face-to-face-talk-png.png\");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  &:hover {\r\n    width: 410px;\r\n    height: 260px;\r\n  }\r\n`;\r\n\r\nconst Container2 = styled.div`\r\n  width: 400px;\r\n  height: 250px;\r\n  background-image: url(\"https://img.icons8.com/color/452/edit-user-female.png\");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  &:hover {\r\n    width: 410px;\r\n    height: 260px;\r\n  }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  text-align: center;\r\n  vertical-align: bottom; \r\n  font-size: 30px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return(\r\n  <Body>\r\n    <UL>\r\n      <LI>\r\n        <SLink to=\"/Home\">\r\n          <Container/>\r\n        </SLink>\r\n        <Text>Home</Text>\r\n      </LI>\r\n      <LI>\r\n        <SLink to=\"/profile\">\r\n          <Container2/>\r\n        </SLink>\r\n        <Text>{userObj.displayName}님의 프로필</Text>\r\n      </LI>\r\n    </UL>\r\n  </Body>\r\n)};\r\n\r\nexport default Navigation;","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const history = useHistory();\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const { target : {value} } = event;\r\n    setNewDisplayName(value);\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName){\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <form onSubmit={onSubmit} >\r\n        <input \r\n        onChange={onChange} value={newDisplayName} type=\"text\" placeholder=\"Display name\" />\r\n        <input  type=\"submit\" value=\"프로필 수정\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>로그아웃</button>\r\n      <Link to=\"/\">돌아가기</Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Error = styled.div`\r\n  height: 25px;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  line-height: 25px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  font-size: 15px;\r\n  color: white;\r\n  font-weight: 600;\r\n  height: 25px;\r\n  width: 240px;\r\n  border-radius: 3px;\r\n  background: red;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  font-size: 13px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 420px;\r\n  height: 420px;\r\n  border-radius: 18%;\r\n  background-color: gold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 260px;\r\n`;\r\n\r\nconst IDPW = styled.input`\r\n  font-size: 17px;\r\n  width: 220px;\r\n  height: 36px;\r\n  color: black;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n  border-bottom: 2px solid #95a5a6;\r\n  &:focus::-webkit-input-placeholder {\r\n    color:transparent;\r\n  }\r\n`;\r\n\r\nconst Login = styled.button`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  border: none;\r\n  background: white;\r\n  margin:15px 0 15px 0;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  background-color: white;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  vertical-align: middle;\r\n  line-height: 40px;\r\n`;\r\n\r\nconst AuthForm = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck,setPasswordCheck] = useState('');\r\n  const [passwordError,setPasswordError] = useState(false);\r\n\r\n  const onChange = (event) => {\r\n    const {target: { name, value }} = event;\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      \r\n      await authService.createUserWithEmailAndPassword(email, password);\r\n    } catch(error) {\r\n      if(password !== passwordCheck) {\r\n        return alert('비밀번호와 비밀번호 확인이 일치해야 합니다.')\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangePasswordChk = async (e) => {\r\n    setPasswordError(e.target.value !== password);\r\n    setPasswordCheck(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Body>\r\n      <Container>\r\n        <Form onSubmit={onSubmit}>\r\n          <IDPW \r\n            name=\"email\" \r\n            type=\"text\" \r\n            placeholder=\"이메일\" \r\n            required value={email} \r\n            onChange={onChange}\r\n          />\r\n          <IDPW \r\n            name=\"password\" \r\n            type=\"password\" \r\n            placeholder=\"비밀번호\" \r\n            required value={password} \r\n            onChange={onChange}\r\n            minLength=\"6\"\r\n          />\r\n          <IDPW \r\n            name=\"passwordCheck\" \r\n            type=\"password\" \r\n            placeholder=\"비밀번호 확인\" \r\n            value={passwordCheck}\r\n            required onChange={onChangePasswordChk}\r\n            minLength=\"6\"\r\n          />\r\n          <Error>\r\n            {passwordError && <ErrorText>\r\n              비밀번호가 일치하지 않습니다.\r\n            </ErrorText>}\r\n          </Error>\r\n          <Login type=\"submit\" >계정생성</Login>\r\n          <SLink to=\"/\">\r\n            <Text>돌아가기</Text>\r\n          </SLink>\r\n        </Form>\r\n      </Container>\r\n    </Body>\r\n  )\r\n}\r\nexport default AuthForm;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Box = ({num, handleClick}) =>{\r\n  return <Container onClick={() => handleClick(num)}>{num !==0 ? num : null}</Container>;\r\n}\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid rgba(0,0,0,0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  &:hover {\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.8) inset, 0px 0px 5px rgba(200,200,200,0.5);\r\n  }\r\n`;\r\n\r\nexport default Box;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Box from './Box';\r\n\r\nconst Container = styled.div`\r\n  width: 700px;\r\n  height: 700px;\r\n  border: 1px solid blue;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: repeat(5, 1fr);\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Board = ({numbers, handleClick}) => {\r\n  return(\r\n    <Container>\r\n      {numbers.map((num, index) => (\r\n        <Box handleClick={handleClick} num={num} key={index}></Box>\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from './Board';\r\nimport { useState } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n  height: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nlet array = [];\r\nfor(let i = 1; i<=25; i++) {\r\n  array.push(i);\r\n}\r\n\r\nconst RamdomNumber = () => {\r\n  const [numbers, setNumbers] = useState(array);\r\n  const [gameFlag, setGameFlag] = useState(false);\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const handleClick = (num) => {\r\n  if(num === current) {\r\n    if(num === 50) {\r\n      alert(\"축하합니다\");\r\n      endGame();\r\n    }\r\n    const index = numbers.indexOf(num);\r\n    setNumbers(numbers => [\r\n      ...numbers.slice(0, index),\r\n      num < 26 ? num + 25 : 0,\r\n      ...numbers.slice(index + 1)\r\n    ]);\r\n    setCurrent(current => current + 1);\r\n    }\r\n  }\r\n\r\n  const shuffleArray = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const gameStart = () => {\r\n    setNumbers(shuffleArray(array));\r\n    setCurrent(1);\r\n    setGameFlag(true);\r\n  }\r\n\r\n  const endGame = () => {\r\n    setGameFlag(false);\r\n  }\r\n\r\n  return (\r\n    <Body>\r\n      <h1>랜덤숫자 맞추기 게임</h1>\r\n      <Link to=\"/Home\">돌아가기</Link>\r\n      <Container>\r\n        {gameFlag ? (\r\n          <>\r\n            <Board numbers={numbers} handleClick={handleClick}/>\r\n            <Timer/>\r\n            <Button variant=\"primary\" size=\"lg\" onClick={endGame}>그만하기</Button>\r\n          </>\r\n        ) : (\r\n          <Button variant=\"primary\" size=\"lg\" onClick={gameStart}>Start</Button>\r\n        )}\r\n      </Container>\r\n    </Body>\r\n  )\r\n}\r\n\r\nexport default RamdomNumber;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Timer() {\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const record = useRef();\r\n  record.current = timeElapsed;\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeElapsed(timeElapsed => timeElapsed + 30);\r\n    }, 30);\r\n    return () => {\r\n      alert(`당신의 기록은 ${record.current / 1000}초 입니다.`);\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Front>{Math.floor(timeElapsed / 1000)}:</Front>\r\n      <Back>{(timeElapsed % 1000) / 10}</Back>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 15px;\r\n  width: 100px;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 35px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Front = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nconst Back = styled.div`\r\n  width: 1em;\r\n`;\r\n\r\nexport default Timer;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RamdomNumber from \"components/game/RamdomNumber\";\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst App = () =>{\r\n  return (\r\n    <Body>\r\n      <RamdomNumber></RamdomNumber>\r\n    </Body>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from 'routes/Profile';\r\nimport AccountForm from './AccountForm';\r\nimport Game from 'routes/Game';\r\n\r\nconst RouterHandle = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n        <>\r\n          <Route exact path=\"/\" component={Navigation}>\r\n            <Navigation userObj={userObj}/>\r\n          </Route>\r\n          <Route exact path=\"/Home\" component={Home}>\r\n            <Home userObj={userObj}/>\r\n          </Route>\r\n          <Route exact path=\"/Game\" component={Game}>\r\n            <Game/>\r\n          </Route>\r\n          <Route exact path=\"/profile\" component={Profile}>\r\n            <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n          </Route>\r\n        </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\" component={Auth}>\r\n              <Auth/>\r\n            </Route>\r\n            <Route exact path=\"/Account\" component={AccountForm}>\r\n              <AccountForm/>\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default RouterHandle;","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n\r\n    body{\r\n        width: 100%;\r\n        height: 100vh;\r\n        font-size: 20px;\r\n        background-color: white;\r\n        font-family: 'Noto Sans KR', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"../components/Router\";\nimport { authService } from \"fbase\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport styled from \"styled-components\";\n\nconst Body = styled.body`\n  width: 100%;\n  height: 100vh;\n  padding: 0;\n  margin: 0;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      console.log(user);\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          email: user.email,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      email: user.email,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  \n  return (\n    <Body>\n      <GlobalStyles />\n      {init ? (\n        <>\n          <AppRouter\n            refreshUser={refreshUser}\n            isLoggedIn={Boolean(userObj)}\n            userObj={userObj}\n          />\n        </>\n      ) : (\n        \"로딩중\"\n      )}\n    </Body>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}